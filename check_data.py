#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö"""

import json
from pathlib import Path


def check_data_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö"""
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫—É data
    data_dir = Path("data")
    if not data_dir.exists():
        print("‚ùå –ü–∞–ø–∫–∞ data –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    print("‚úÖ –ü–∞–ø–∫–∞ data –Ω–∞–π–¥–µ–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫—É cache
    cache_dir = data_dir / "cache"
    if not cache_dir.exists():
        print("‚ùå –ü–∞–ø–∫–∞ data/cache –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    print("‚úÖ –ü–∞–ø–∫–∞ data/cache –Ω–∞–π–¥–µ–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –∫—ç—à–∞
    cache_file = cache_dir / "llm_cache.json"
    if not cache_file.exists():
        print("‚ùå –§–∞–π–ª llm_cache.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    print("‚úÖ –§–∞–π–ª llm_cache.json –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫—ç—à–∞
    try:
        with open(cache_file, "r", encoding="utf-8") as f:
            cache_data = json.load(f)
        print(f"‚úÖ –ö—ç—à —Å–æ–¥–µ—Ä–∂–∏—Ç {len(cache_data)} –∑–∞–ø–∏—Å–µ–π")
        return True
    except json.JSONDecodeError:
        print("‚ùå –§–∞–π–ª –∫—ç—à–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫—ç—à–∞: {e}")
        return False


if __name__ == "__main__":
    success = check_data_structure()
    if success:
        print("\nüéâ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –ø–æ—Ä—è–¥–∫–µ!")
    else:
        print("\nüí• –ü—Ä–æ–±–ª–µ–º—ã —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –¥–∞–Ω–Ω—ã—Ö!")
