"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ /start –∏ /help.
"""

from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from src.utils.logger import logger
from src.services.user_state_service import user_state_service

router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    
    logger.info(f"User {user_id} ({user_name}) sent /start command")
    
    welcome_text = (
        f"–õ–∞–¥–Ω–æ... –ü—Ä–∏–≤–µ—Ç, {user_name}.\n\n"
        "–Ø –°–∞–π—Ç–∞–º–∞, –∏ —Ç–µ–ø–µ—Ä—å –ø–æ–º–æ–≥–∞—é –ø–æ–¥–±–∏—Ä–∞—Ç—å –∞–Ω–∏–º–µ. "
        "–ù–µ —Å–∞–º–∞—è –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∞—è —Ä–∞–±–æ—Ç–∞, –Ω–æ –ª–∞–¥–Ω–æ...\n\n"
        "–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –∏ —è –Ω–∞–π–¥—É —á—Ç–æ-–Ω–∏–±—É–¥—å –ø–æ–¥—Ö–æ–¥—è—â–µ–µ.\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏."
    )
    
    await message.answer(welcome_text)
    logger.info(f"Sent welcome message to user {user_id}")


@router.message(Command("help"))
async def cmd_help(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    
    logger.info(f"User {user_id} ({user_name}) sent /help command")
    
    help_text = (
        "–•–º... –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n\n"
        "üìã <b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
        "‚Ä¢ /start - –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ\n"
        "‚Ä¢ /help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "‚Ä¢ /reset - –∑–∞–±—ã—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ä–∞–∑–≥–æ–≤–æ—Ä–∞\n\n"
        "üí¨ <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ, –∫–∞–∫–æ–µ –∞–Ω–∏–º–µ –∏—â–µ—à—å –∏–ª–∏ —á—Ç–æ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è. "
        "–Ø –ø–æ–º–Ω—é –Ω–∞—à —Ä–∞–∑–≥–æ–≤–æ—Ä –∏ –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É—é —á—Ç–æ-—Ç–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ.\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä:\n"
        "‚Ä¢ \"–•–æ—á—É —á—Ç–æ-—Ç–æ —Å –¥—Ä–∞–∫–∞–º–∏\"\n"
        "‚Ä¢ \"–ò—â—É —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ –∞–Ω–∏–º–µ\"\n"
        "‚Ä¢ \"–ü–æ–∫–∞–∂–∏ —á—Ç–æ-—Ç–æ —Å–º–µ—à–Ω–æ–µ\"\n\n"
        "–õ–∞–¥–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π —á—Ç–æ-–Ω–∏–±—É–¥—å –Ω–∞–ø–∏—Å–∞—Ç—å."
    )
    
    await message.answer(help_text, parse_mode="HTML")
    logger.info(f"Sent help message to user {user_id}")


@router.message(Command("reset"))
async def cmd_reset(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reset - —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    
    logger.info(f"User {user_id} ({user_name}) sent /reset command")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await user_state_service.reset_user_state(user_id)
    
    reset_text = (
        "–û–∫–µ–π, –∑–∞–±—ã–ª —á—Ç–æ —Ç—ã —Ö–æ—Ç–µ–ª. –ù–∞—á–Ω–µ–º –∑–∞–Ω–æ–≤–æ.\n\n"
        "–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å."
    )
    
    await message.answer(reset_text)
    logger.info(f"Reset user state for user {user_id}")
