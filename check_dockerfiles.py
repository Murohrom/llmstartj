#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Dockerfile"""

from pathlib import Path


def check_dockerfiles():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ Dockerfile –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç—Ä–æ–∫"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Dockerfile...")
    
    dockerfiles = [
        "Dockerfile",
        "Dockerfile.railway", 
        "Dockerfile.railway.simple",
        "Dockerfile.original"
    ]
    
    problematic_patterns = [
        "COPY data/ ./data/",
        "COPY –¥–∞–Ω–Ω—ã–µ/",
        "ls -la data/"
    ]
    
    all_good = True
    
    for dockerfile in dockerfiles:
        if not Path(dockerfile).exists():
            print(f"‚ö†Ô∏è  {dockerfile} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            continue
            
        print(f"\nüìÑ –ü—Ä–æ–≤–µ—Ä—è—é {dockerfile}:")
        
        with open(dockerfile, 'r', encoding='utf-8') as f:
            content = f.read()
            
        has_problems = False
        for pattern in problematic_patterns:
            if pattern in content:
                print(f"  ‚ùå –ù–∞–π–¥–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–Ω–∞—è —Å—Ç—Ä–æ–∫–∞: {pattern}")
                has_problems = True
                all_good = False
        
        if not has_problems:
            print(f"  ‚úÖ {dockerfile} –≤ –ø–æ—Ä—è–¥–∫–µ")
    
    print("\n" + "="*50)
    
    if all_good:
        print("üéâ –í—Å–µ Dockerfile –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
        return True
    else:
        print("üí• –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –≤ Dockerfile")
        return False


if __name__ == "__main__":
    check_dockerfiles()
