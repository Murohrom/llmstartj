#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–µ–π OpenRouter"""

import asyncio
import os
from openai import AsyncOpenAI
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()


async def check_models():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–µ–π OpenRouter"""
    api_key = os.getenv("OPENROUTER_API_KEY")
    
    if not api_key:
        print("‚ùå OPENROUTER_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return
    
    client = AsyncOpenAI(
        api_key=api_key,
        base_url="https://openrouter.ai/api/v1"
    )
    
    # –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    models_to_check = [
        "openai/gpt-3.5-turbo",
        "anthropic/claude-3-haiku", 
        "google/gemini-pro",
        "meta-llama/llama-3.1-8b-instruct:free"
    ]
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–µ–π OpenRouter...")
    print("=" * 50)
    
    available_models = []
    
    for model in models_to_check:
        try:
            print(f"–ü—Ä–æ–≤–µ—Ä—è—é {model}...", end=" ")
            
            # –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
            response = await client.chat.completions.create(
                model=model,
                messages=[{"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç"}],
                max_tokens=10,
                timeout=10
            )
            
            print("‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞")
            available_models.append(model)
            
        except Exception as e:
            print(f"‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {str(e)[:50]}...")
    
    print("\n" + "=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {len(available_models)}/{len(models_to_check)} –º–æ–¥–µ–ª–µ–π –¥–æ—Å—Ç—É–ø–Ω—ã")
    
    if available_models:
        print("\n‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:")
        for model in available_models:
            print(f"  - {model}")
        
        print(f"\nüí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –º–æ–¥–µ–ª—å: {available_models[0]}")
    else:
        print("\nüí• –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π!")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("  - –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API –∫–ª—é—á–∞")
        print("  - –ë–∞–ª–∞–Ω—Å –Ω–∞ OpenRouter")
        print("  - –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞")


if __name__ == "__main__":
    asyncio.run(check_models())
