name: Deploy Anime Bot

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Install dependencies
        run: uv sync

      - name: Run linting
        run: uv run ruff check src/

      - name: Run tests (if any)
        run: |
          if [ -f "pyproject.toml" ] && grep -q "pytest" pyproject.toml; then
            uv run pytest
          else
            echo "No tests configured"
          fi

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t anime-bot .

      - name: Test Docker image
        run: |
          docker run --rm anime-bot python -c "import sys; print('Docker image test passed')"

  deploy-railway:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Railway
        uses: bervProject/railway-deploy@v1.0.0
        with:
          railway_token: ${{ secrets.RAILWAY_TOKEN }}
          service: anime-bot
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  deploy-render:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Render
        uses: johnbeynon/render-deploy-action@v1.0.0
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}

  notify:
    needs: [deploy-railway, deploy-render]
    runs-on: ubuntu-latest
    if: always() && github.ref == 'refs/heads/main'
    steps:
      - name: Notify deployment status
        run: |
          if [ "${{ needs.deploy-railway.result }}" == "success" ] && [ "${{ needs.deploy-render.result }}" == "success" ]; then
            echo "✅ Deployment successful to Railway and Render"
          elif [ "${{ needs.deploy-railway.result }}" == "success" ]; then
            echo "✅ Deployment successful to Railway"
          elif [ "${{ needs.deploy-render.result }}" == "success" ]; then
            echo "✅ Deployment successful to Render"
          else
            echo "❌ Deployment failed"
            exit 1
          fi
